[{"/home/bruno/IdeaProjects/sakata-app/src/App.js":"1","/home/bruno/IdeaProjects/sakata-app/src/index.js":"2","/home/bruno/IdeaProjects/sakata-app/src/reportWebVitals.js":"3","/home/bruno/IdeaProjects/sakata-app/src/components/AddBaseCard.js":"4","/home/bruno/IdeaProjects/sakata-app/src/components/SearchCharacters.js":"5","/home/bruno/IdeaProjects/sakata-app/src/contexts/SearchCharactersContext.js":"6","/home/bruno/IdeaProjects/sakata-app/src/contexts/AddBaseCardsContext.js":"7","/home/bruno/IdeaProjects/sakata-app/src/components/AnimeCharacters.js":"8","/home/bruno/IdeaProjects/sakata-app/src/contexts/AnimeCharactersContext.js":"9"},{"size":665,"mtime":1606861119126,"results":"10","hashOfConfig":"11"},{"size":547,"mtime":1606673109878,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606670516565,"results":"13","hashOfConfig":"11"},{"size":11105,"mtime":1607393548965,"results":"14","hashOfConfig":"11"},{"size":2237,"mtime":1606860741976,"results":"15","hashOfConfig":"11"},{"size":1076,"mtime":1606860177725,"results":"16","hashOfConfig":"11"},{"size":10815,"mtime":1607403062854,"results":"17","hashOfConfig":"11"},{"size":1438,"mtime":1606861236100,"results":"18","hashOfConfig":"11"},{"size":866,"mtime":1606860572943,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"105ymdi",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bruno/IdeaProjects/sakata-app/src/App.js",[],"/home/bruno/IdeaProjects/sakata-app/src/index.js",[],["42","43"],"/home/bruno/IdeaProjects/sakata-app/src/reportWebVitals.js",[],["44","45"],"/home/bruno/IdeaProjects/sakata-app/src/components/AddBaseCard.js",["46","47"],"/home/bruno/IdeaProjects/sakata-app/src/components/SearchCharacters.js",[],"/home/bruno/IdeaProjects/sakata-app/src/contexts/SearchCharactersContext.js",[],"/home/bruno/IdeaProjects/sakata-app/src/contexts/AddBaseCardsContext.js",["48","49","50","51","52"],"import download from 'downloadjs';\nimport * as HtmlToImage from 'html-to-image';\nimport React, { createRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { style } from '../components/AddBaseCard';\nimport BeastClass from '../resources/class-beast.png';\nimport FighterClass from '../resources/class-fighter.png';\nimport MachinistClass from '../resources/class-machinist.png';\nimport MagicianClass from '../resources/class-magician.png';\nimport MusicianClass from '../resources/class-musician.png';\nimport RangerClass from '../resources/class-ranger.png';\nimport ScholarClass from '../resources/class-scholar.png';\nimport SupernaturalClass from '../resources/class-supernatural.png';\nimport SupportClass from '../resources/class-support.png';\nimport SwordsmanClass from '../resources/class-swordsman.png';\nimport WorkerClass from '../resources/class-worker.png';\nimport ActionGenre from '../resources/genre-action.png';\nimport AdventureGenre from '../resources/genre-adventure.png';\nimport ComedyGenre from '../resources/genre-comedy.png';\nimport MysteryGenre from '../resources/genre-mystery.png';\nimport RomanceGenre from '../resources/genre-romance.png';\nimport SciFiGenre from '../resources/genre-scifi.png';\nimport SliceOfLifeGenre from '../resources/genre-sliceoflife.png';\nimport SportsGenre from '../resources/genre-sports.png';\nimport TemplateSilver from '../resources/sakata-template-common.png';\nimport TemplateEpic from '../resources/sakata-template-epic.png';\nimport TemplateGold from '../resources/sakata-template.png';\nimport TemplateLegend from '../resources/sakata-legend.png';\n\nconst classes = [\n    { name: 'Fighter', value: '1' },\n    { name: 'Magician', value: '2' },\n    { name: 'Swordsman', value: '3' },\n    { name: 'Ranger', value: '4' },\n    { name: 'Support', value: '5' },\n    { name: 'Beast', value: '6' },\n    { name: 'Machinist', value: '7' },\n    { name: 'Supernatural', value: '8' },\n    { name: 'Scholar', value: '9' },\n    { name: 'Worker', value: '10' },\n    { name: 'Musician', value: '11' },\n];\n\nconst genres = [\n    { name: 'Action', value: '1' },\n    { name: 'Adventure', value: '2' },\n    { name: 'SciFi', value: '3' },\n    { name: 'Sports', value: '4' },\n    { name: 'Mystery', value: '5' },\n    { name: 'SliceOfLife', value: '6' },\n    { name: 'Comedy', value: '7' },\n    { name: 'Romance', value: '8' },\n]\n\nconst AddBaseCardContext = React.createContext({});\n\nconst AddBaseCardProvider = component => {\n    const sakataCardRef = createRef();\n    const { malId } = useParams();\n    const [character, setCharacter] = useState({});\n    const [selectedAnimes, setSelectedAnimes] = useState([]);\n    const [picture, setPicture] = useState(\"\");\n    const [baseOverallPower, setBaseOverallPower] = useState(0);\n    const [overallPower, setOverallPower] = useState(0);\n    const [selectedClass, setselectedClass] = useState({});\n    const [selectedGenre, setSelectedGenre] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const [alert, setAlert] = useState({show: false, message: ''});\n    const [rarity, setRarity] = useState({\n        value: 1,\n        template: TemplateSilver,\n        fontStyle: style.silverFont\n    });\n\n    const handlePicture = event => {\n        setPicture(event.target.value)\n    };\n\n    const handleRarity = (value, template, fontStyle) => {\n        setRarity({\n            value: value,\n            template: template,\n            fontStyle: fontStyle\n        });\n    };\n\n    const handleClass = e => {\n        if (e.target.value === '1') {\n            setselectedClass({path: FighterClass, value: e.target.value})\n        }\n        if (e.target.value === '2') {\n            setselectedClass({path: MagicianClass, value: e.target.value})\n        }\n        if (e.target.value === '3') {\n            setselectedClass({path: SwordsmanClass, value: e.target.value})\n        }\n        if (e.target.value === '4') {\n            setselectedClass({path: RangerClass, value: e.target.value})\n        }\n        if (e.target.value === '5') {\n            setselectedClass({path: SupportClass, value: e.target.value})\n        }\n        if (e.target.value === '6') {\n            setselectedClass({path: BeastClass, value: e.target.value})\n        }\n        if (e.target.value === '7') {\n            setselectedClass({path: MachinistClass, value: e.target.value})\n        }\n        if (e.target.value === '8') {\n            setselectedClass({path: SupernaturalClass, value: e.target.value})\n        }\n        if (e.target.value === '9') {\n            setselectedClass({path: ScholarClass, value: e.target.value})\n        }\n        if (e.target.value === '10') {\n            setselectedClass({path: WorkerClass, value: e.target.value})\n        }\n        if (e.target.value === '11') {\n            setselectedClass({path: MusicianClass, value: e.target.value})\n        }\n    }\n\n    const handleGenre = e => {\n        if (e.target.value === '1') {\n            setSelectedGenre({path: ActionGenre, value: e.target.value})\n        }\n        if (e.target.value === '2') {\n            setSelectedGenre({path: AdventureGenre, value: e.target.value})\n        }\n        if (e.target.value === '3') {\n            setSelectedGenre({path: SciFiGenre, value: e.target.value})\n        }\n        if (e.target.value === '4') {\n            setSelectedGenre({path: SportsGenre, value: e.target.value})\n        }\n        if (e.target.value === '5') {\n            setSelectedGenre({path: MysteryGenre, value: e.target.value})\n        }\n        if (e.target.value === '6') {\n            setSelectedGenre({path: SliceOfLifeGenre, value: e.target.value})\n        }\n        if (e.target.value === '7') {\n            setSelectedGenre({path: ComedyGenre, value: e.target.value})\n        }\n        if (e.target.value === '8') {\n            setSelectedGenre({path: RomanceGenre, value: e.target.value})\n        }\n    }\n\n    const selectAnime = anime => {\n        let animes = Array.from(selectedAnimes);\n        let i = animes.findIndex(a => a.mal_id === anime.mal_id);\n        if (i < 0) {\n            animes.push(anime);\n        } else {\n            animes.splice(i, 1);\n        }\n        setSelectedAnimes(animes);\n    };\n    \n    const fetchCharacterData = async () => {\n        setIsLoading(true);\n        if (malId) {\n            const response = await fetch(`https://api.jikan.moe/v3/character/${malId}`);\n            const character = await response.json();\n            setCharacter(character);\n            setPicture(character.image_url);\n        }\n        setIsLoading(false);\n    }\n\n    useEffect(() => {\n        fetchCharacterData();\n    }, []);\n\n    useEffect(() => {\n        if (baseOverallPower) {\n            saveCard();\n        }\n    }, [baseOverallPower]);\n\n    useEffect(() => {\n        let newOverallPower = 0;\n        if (rarity.value === 1) {\n            newOverallPower = baseOverallPower\n        } else if (rarity.value === 2) {\n            newOverallPower = baseOverallPower + 1\n        } else if (rarity.value === 3) {\n            newOverallPower = baseOverallPower + 3\n        } else if (rarity.value === 4) {\n            newOverallPower = baseOverallPower + 5\n        };\n        setOverallPower(newOverallPower);\n    }, [rarity, baseOverallPower]);\n \n    const generateOverallPower = async () => {\n        if (Object.keys(selectedGenre).length === 0 || Object.keys(selectedClass).length === 0) {\n            setAlert({\n                show: true,\n                message: 'Select class and genre for this character'\n            });\n            return () => {};\n        }\n        if (character.animeography.length > 5 && selectedAnimes.length === 0) {\n            setAlert({\n                show: true,\n                message: 'This character has many animes, select some from the list'\n            });\n            return () => {};\n        }\n        setIsLoading(true);\n        if (malId) {\n            const reqOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    anime_mal_ids: selectedAnimes.map(a => a.mal_id) \n                })\n            };\n            try {\n                const res = await fetch(`${process.env.REACT_APP_SAKATA_API_URL}/basecards/overall-power/${malId}`, reqOptions);\n                const data = await res.json();\n                setBaseOverallPower(data.overall_power);\n            } catch (err) {\n                setAlert({\n                    show: true,\n                    message: `Could not save card: ${err}`\n                });\n            }\n        }\n        setIsLoading(false);\n    }\n\n    const saveCard = async () => {\n        const reqOptions = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: character.name,\n                class: parseInt(selectedClass.value, 10),\n                genre: parseInt(selectedGenre.value, 10),\n                mal_id: parseInt(malId),\n                overall_power: baseOverallPower\n            })\n        };\n        console.log(reqOptions.body);\n        return await fetch(`${process.env.REACT_APP_SAKATA_API_URL}/basecards`, reqOptions);\n    }\n\n    const generateJpegCard = () => {\n        HtmlToImage.toJpeg(sakataCardRef.current, { quality: 0.95 })\n            .then(async (dataUrl) => {\n                const filename = `sakata_${character.mal_id}[${rarity.value}].jpeg`;\n                const base64Response = await fetch(dataUrl);\n                const blob = await base64Response.blob();\n                const formData = new FormData();\n                formData.append(\"basecard\", blob, filename);\n                fetch(`${process.env.REACT_APP_SAKATA_API_URL}/basecards/image`, {\n                  method: 'POST',\n                  body: formData\n                });\n                download(dataUrl, filename);\n            })\n    }\n\n    return (\n        <AddBaseCardContext.Provider\n            value={{\n                isLoading,\n                character,\n                overallPower,\n                picture,\n                handlePicture,\n                rarity,\n                handleRarity,\n                classes,\n                selectedClass,\n                handleClass,\n                genres,\n                selectedGenre,\n                handleGenre,\n                selectAnime,\n                selectedAnimes,\n                generateOverallPower,\n                alert,\n                setAlert,\n                sakataCardRef,\n                generateJpegCard,\n            }}\n        >\n            {component.children}\n        </AddBaseCardContext.Provider>\n    )\n}\n\nexport { AddBaseCardContext, AddBaseCardProvider };\n","/home/bruno/IdeaProjects/sakata-app/src/components/AnimeCharacters.js",[],["53","54"],"/home/bruno/IdeaProjects/sakata-app/src/contexts/AnimeCharactersContext.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":128,"column":45,"nodeType":"63","endLine":128,"endColumn":108},{"ruleId":"61","severity":1,"message":"62","line":129,"column":45,"nodeType":"63","endLine":129,"endColumn":108},{"ruleId":"64","severity":1,"message":"65","line":26,"column":8,"nodeType":"66","messageId":"67","endLine":26,"endColumn":20},{"ruleId":"64","severity":1,"message":"68","line":27,"column":8,"nodeType":"66","messageId":"67","endLine":27,"endColumn":20},{"ruleId":"64","severity":1,"message":"69","line":28,"column":8,"nodeType":"66","messageId":"67","endLine":28,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":174,"column":8,"nodeType":"72","endLine":174,"endColumn":10,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":180,"column":8,"nodeType":"72","endLine":180,"endColumn":26,"suggestions":"75"},{"ruleId":"55","replacedBy":"76"},{"ruleId":"57","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'TemplateEpic' is defined but never used.","Identifier","unusedVar","'TemplateGold' is defined but never used.","'TemplateLegend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCharacterData'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has a missing dependency: 'saveCard'. Either include it or remove the dependency array.",["81"],["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [fetchCharacterData]",{"range":"86","text":"87"},"Update the dependencies array to be: [baseOverallPower, saveCard]",{"range":"88","text":"89"},[6639,6641],"[fetchCharacterData]",[6740,6758],"[baseOverallPower, saveCard]"]